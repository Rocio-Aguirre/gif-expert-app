{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yMAmCeA,EAhCK,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,WAEjC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,uBAAMC,SARW,SAAAC,GACjBA,EAAEC,iBACFJ,EAAWK,OAAOC,OAAS,GAC3BT,EAAc,CAAEG,GAAH,mBAAkBF,KAC/BG,EAAc,KAId,UACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SAhBc,SAAAN,GACtBF,EAAcE,EAAEO,OAAOF,UAiBnB,iD,uBCzBCG,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QATf,kBAabM,GAba,4CAAH,sDCaNO,G,MAVK,SAAC,GAA6B,IAAD,IAA3BL,IAAMR,EAAqB,EAArBA,IAAKS,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAEjC,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAcA,EAAd,MAAQD,QCgCLQ,EAjCC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAad,ECjBwB,SAACA,GACzB,MAA0Bb,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNxB,EAASC,GACJwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAI1B,CAACpB,IAEGqB,EDDyBK,CAAa1B,GAAhCa,EAAb,EAAON,KAAca,EAArB,EAAqBA,QAIrB,OACI,qCACEA,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,oBAAIA,UAAU,oCAAd,SAAmDhB,IAEnD,qBAAKgB,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,CAAaA,IAAKA,aEG3BiB,EA/BM,WAGjB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOD,EAAP,KAAmBD,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,EAAeC,WAAYA,IACvD,uBAIA,6BAEIA,EAAWuB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCpB7B4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7a7bfed2.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories, categories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = e =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        inputValue.trim().length > 2 &&\r\n        setCategories([ inputValue, ...categories ]);\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n            <button>Agregar</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    //categories: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n\r\n\r\n\r\n","export const getGifts = async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=AVwX9RSdYj6ssWpggbKqLGgDkwTo7ZUR`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized.url\r\n        }\r\n    })\r\n    //console.log(gifs)\r\n    return gifs;\r\n    //setImages(gifs);\r\n}","import React from 'react'\r\nimport 'animate.css';\r\n\r\nconst GifGridItem = ({img: {url, id, title}}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p key={id}> {title} </p> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react' \r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//{ useEffect, useState } from 'react'\r\n//import { getGifts } from '../helpers/getGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    /*const [images, setImages] = useState([]);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        getGifts(category)\r\n            .then(setImages);\r\n\r\n    }, [category])\r\n   */ \r\n  \r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    //console.log(images, loading)\r\n\r\n    return (\r\n        <>\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => ( \r\n                        <GifGridItem img={img}/> \r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifts(category)\r\n            .then(imgs => {\r\n                   // console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n            });\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai x', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    /*\r\n    const handleAdd = () =>{\r\n        setCategories([...categories, 'HunterXHunter'])\r\n    }\r\n*/\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} categories={categories}/>\r\n            <hr/>\r\n\r\n            \r\n\r\n            <ol>\r\n            {\r\n                categories.map(category => \r\n                    <GifGrid\r\n                        key={category} \r\n                        category={category}\r\n                    />)\r\n            }\r\n             </ol>\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}